#!/bin/bash

# TODO: Dont call alone. will destroy stuff. Fix this

# not used
working_folder="$1"
mkdir -p .cairo1_vim

# Replace `tags_file` with the path to your ctags file
ctags_file="./corelib_tags.tags"
# Output files
corelib_completions_file="./.cairo1_vim/corelib_completions.txt"
corelib_traits_snippets="./.cairo1_vim/cairo1.snippets"

# pragmas manage: event
# remember no commas
dont_generate_for_traits=("Drop" "Copy" "Destruct" "Default" "Event" "EventEmitter" "NumericLiteral" "Oneable" "AccountContract")
dont_generate_for_modules=("traits")

# Clear the output files
> $corelib_completions_file
> $corelib_traits_snippets

# Read the ctags file line by line
while read -r line; do
	# Specific for traits
	# Check if the line ends with 't'
	# as per ctags file for cairo
	next_iter=0
	if [[ $line =~ .*\;\"[[:space:]]t$ ]]; then
		# Extract the required strings
		# since ctags file line fields seperated by tabs
		trait_name=$(echo "$line" | awk -F'\t' '{print $1}')
		for element in "${dont_generate_for_traits[@]}"; do
			if [[ "$trait_name" == $element ]]; then
				next_iter=1
				break
			fi
		done
		file_path=$(echo "$line" | awk -F'\t' '{print $2}')
		mod_name=$(basename "$file_path" | cut -d '.' -f1)
		for element in "${dont_generate_for_modules[@]}"; do
			if [[ "$mod_name" == $element ]]; then
				next_iter=1
				break
			fi
		done

	if [[ $next_iter == 1 ]]; then
		next_iter=0
		continue
	fi
	# Append the trait_name in lowercase to corelib_completions_file
	echo "${trait_name,,}" >> $corelib_completions_file

	# Append the snippet to corelib_traits_snippets
	echo "snippet ${trait_name,,} \"$trait_name\" i" >> $corelib_traits_snippets
	echo "$mod_name::${trait_name}" >> $corelib_traits_snippets
	echo "endsnippet" >> $corelib_traits_snippets
	echo "" >> $corelib_traits_snippets
	fi
	# Specific for externs. particularly useful in starknet
	# Check if the line ends with 'x'
	# as per ctags file for cairo
	if [[ $line =~ .*\;\"[[:space:]]x$ ]]; then
		# Extract the required strings
		# specific testing utils available within corelib
		extern_func_name=$(echo "$line" | awk -F'\t' '{print $1}')
		file_path=$(echo "$line" | awk -F'\t' '{print $2}')

		# Use this is needed
		# if [[ $file_path =~ starknet ]]; then
		# 	# Use parameter expansion to get the last part of the path
		# 	lastpart=${file_path##*/} 
		# 	# Remove the extension
		# 	file_without_ext=${lastpart%.*}  
		# 	mod_name="starknet::${file_without_ext}"
		# fi

		if [[ $file_path =~ starknet && $file_path =~ testing ]]; then
			mod_name='starknet::testing'
		elif [[ $file_path =~ starknet ]]; then
			mod_name='starknet'
		else
			continue
			# extern funcs from corelib disable for now
			# mod_name=$(basename "$file_path" | cut -d '.' -f1)
		fi

	# Append the extern_func_name in lowercase to corelib_completions_file
	echo "${extern_func_name,,}" >> $corelib_completions_file

	# Append the snippet to corelib_traits_snippets
	echo "snippet ${extern_func_name,,} \"$extern_func_name\" i" >> $corelib_traits_snippets
	echo "$mod_name::${extern_func_name}" >> $corelib_traits_snippets
	echo "endsnippet" >> $corelib_traits_snippets
	echo "" >> $corelib_traits_snippets
	fi
	# Specific for extern types. particularly useful in starknet
	# Check if the line ends with 'y'
	# as per ctags file for cairo
	if [[ $line =~ .*\;\"[[:space:]]y$ ]]; then
		# Extract the required strings
		extern_type_name=$(echo "$line" | awk -F'\t' '{print $1}')
		file_path=$(echo "$line" | awk -F'\t' '{print $2}')
		if [[ $line =~ starknet ]]; then
			mod_name='starknet'
		else
			continue
			# interested in only Starknet extern types
			# mod_name=$(basename "$file_path" | cut -d '.' -f1)
		fi

	# Append the extern_type_name in lowercase to corelib_completions_file
	echo "${extern_type_name,,}" >> $corelib_completions_file

	# Append the snippet to corelib_traits_snippets
	echo "snippet ${extern_type_name,,} \"$extern_type_name\" i" >> $corelib_traits_snippets
	echo "$mod_name::${extern_type_name}" >> $corelib_traits_snippets
	echo "endsnippet" >> $corelib_traits_snippets
	echo "" >> $corelib_traits_snippets
	fi
done < $ctags_file
